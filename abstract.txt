Software engineers use development tools to perform support tasks: compiling code into runnable programs, debugging to find and fix errors, and deploying software across systems. Existing tools used for these tasks are complex, and their misuse can introduce errors and inefficiencies. For example, the "make" tool automates compilation with a user-provided encoding of the task. Users of "make" must produce either a simple but inefficient encoding, or an efficient but complex encoding with an increased risk of error. This project introduces techniques that correctly and efficiently automate compilation, debugging, and deployment tasks without programming.

This project proposes a core technique built on dependency graphs. A dependency graph is generated by observing a piece of software interacting with its environment as it runs. This project proposes three tools that leverage dependency graphs to automate software development tasks. Riker correctly and efficiently automates compilation tasks based on a single example compilation, Scotty answers high-level queries about where a program went wrong by observing the program's execution, and Locutus automates software deployment tasks by observing the user during an example deployment.

This project has the potential to significantly impact the day-to-day work of software developers. Automating support tasks with minimal developer input reduces the cost of software development, and guarantees that support tasks are correct by construction. These changes free developers to focus on their core tasks. This project will provide undergraduate students at Grinnell College and Williams College with opportunities to participate in research work, and will broaden participation by including students from underrepresented groups.

All products of this project will be hosted at https://github.com/curtsinger-lab/idi-grant. Code produced in the course of this project will be released under the MIT license. Modifications to existing software will be released under a compatible open source license. Any non-code products will comprise only publicly-available, non-confidential information, and will be released under a Creative Commons license.  All products of this project will be preserved for at least five years after the conclusion of the project.
